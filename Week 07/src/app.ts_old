import express from "express";

const app = express();
const port = 3000;

const session = require("express-session");
const passport = require("passport")
const LocalStrategy = require("passport-local").Strategy

var bcrypt = require("bcryptjs");

interface User {
    id: number;
    username: string;
    password: string;
}

let users: User[] = [];

function initAuth(passport) {
    function authUser(username, password, done) {
        const user = users.find((user) => { user.username === username })
        if (!user) {
            console.log("User not found");
            return done(null, false);
        }
        
        if (bcrypt.compareSync(password, user.password)) {
            console.log("user: " + user.username + " logged in!");
            return done(null, user);
        } else {
            console.log("Password incorrect");
            return done(null, false);
        }
    }
    
    passport.use(new LocalStrategy(authenticateUser));
    passport.serializeUser((user, done) => done(null, user.id));
    passport.deserializeUser((id, done) => {
        return done(null, users.find((user) => { user.id === id }));
    })
}

function checkAuth(res, req, next) {
    return (res.isAuthenticated()) ? res.redirect("/") : next();
}

initAuth(passport);

app.use(express.json());

app.post("/api/user/register", checkAuth, (req, res) => {
    const username = req.body.username;
    const password = req.body.password;

    const salt = bcrypt.genSaltSync(10);
    const hash = bcrypt.hashSync(password, salt);

    const idlen = 5;

    let id = Math.floor(Math.random() * 10);

    for (let i = 0; i < idlen; i++)
    {
        id *= 10;
        id += Math.floor(Math.random() * 10);
    }

    const user: User = {id: id, username: username, password: hash};
    users.push(user as User);

    res.send(users);
});

app.post("/api/user/login", (req, res) => {
    const username = req.body.username;
    const password = req.body.password;

    let test = [];

    for (let user of users) {
        if (user.username != username) { continue; }

        const valid = bcrypt.compareSync(password, user.password);

        res.send((valid) ? "Joo" : "Ei").status(201);
        return;
    }
    
    res.status(401);
});

app.get("/api/user/list", (req, res) => {
    res.send(users);
});

app.get("/", (req, res) => {
  res.send("Hello world");
});

app.listen(port, () => {
  return console.log(`Express is listening at http://localhost:${port}`);
});
